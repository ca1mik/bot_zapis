from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.types import (
    InlineKeyboardMarkup, InlineKeyboardButton,
    ReplyKeyboardMarkup, KeyboardButton
)
from src.config import cfg

SERVICES = [
    "–ü—Ä–æ–≥—É–ª–∫–∞", "–ö–∞—Ñ–µ", "–ö–∏–Ω–æ",
    "–°–ø–æ—Ä—Ç/–∑–∞–ª/–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å", "–í—ã–µ–∑–¥ –Ω–∞ –ø—Ä–∏—Ä–æ–¥—É",
    "–†–∞–∑–≥–æ–≤–æ—Ä –ø–æ –¥—É—à–∞–º", "–î—Ä—É–≥–æ–µ"
]

DATE_PRESETS = ["–°–µ–≥–æ–¥–Ω—è", "–ó–∞–≤—Ç—Ä–∞", "–ë–ª–∏–∂–∞–π—à–∏–µ –≤—ã—Ö–æ–¥–Ω—ã–µ", "–í—ã–±—Ä–∞—Ç—å –¥–∞—Ç—É"]

# ---------- –Ω–∏–∂–Ω–∏–µ (persistent) –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã ----------
def reply_kb_flow() -> ReplyKeyboardMarkup:
    return ReplyKeyboardMarkup(
        resize_keyboard=True,
        keyboard=[[KeyboardButton(text="‚¨Ö –ù–∞–∑–∞–¥"), KeyboardButton(text="‚úñ –û—Ç–º–µ–Ω–∞")]]
    )

def reply_kb_menu() -> ReplyKeyboardMarkup:
    return ReplyKeyboardMarkup(
        resize_keyboard=True,
        keyboard=[
            [KeyboardButton(text="üÜï –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞")],
            [KeyboardButton(text="üìã –ú–æ–∏ –∑–∞—è–≤–∫–∏")]
        ]
    )

# ---------- –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã ----------
def kb_main_menu():
    kb = InlineKeyboardBuilder()
    kb.button(text="üóì –ó–∞–ø–∏—Å–∞—Ç—å—Å—è", callback_data="new")
    kb.button(text="üìã –ú–æ–∏ –∑–∞—è–≤–∫–∏", callback_data="mine")
    kb.adjust(2, 1)
    return kb

def kb_services():
    kb = InlineKeyboardBuilder()
    for s in SERVICES:
        kb.button(text=s, callback_data=f"svc:{s}")
    kb.adjust(2)
    return kb

def kb_dates(prefix: str = "date:"):
    kb = InlineKeyboardBuilder()
    for d in DATE_PRESETS:
        kb.button(text=d, callback_data=f"{prefix}{d}")
    kb.adjust(2)
    return kb

def kb_times():
    kb = InlineKeyboardBuilder()
    for t in cfg.time_slots:
        kb.button(text=t, callback_data=f"time:{t}")
    kb.button(text="‚è± –í—ã–±—Ä–∞—Ç—å –∏–Ω—Ç–µ—Ä–≤–∞–ª", callback_data="time:__interval__")
    kb.adjust(2)
    return kb

def kb_confirm():
    kb = InlineKeyboardBuilder()
    kb.button(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data="confirm")
    kb.button(text="‚úèÔ∏è –ò—Å–ø—Ä–∞–≤–∏—Ç—å", callback_data="edit")
    kb.adjust(2)
    return kb

def admin_booking_kb(request_id: str) -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data=f"adm:ok:{request_id}"),
            InlineKeyboardButton(text="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å",   callback_data=f"adm:no:{request_id}")
        ],
        [InlineKeyboardButton(text="üïì –ü–µ—Ä–µ–Ω–µ—Å—Ç–∏ (–≤—Ä–µ–º—è)", callback_data=f"adm:res:{request_id}")]
    ])

def kb_admin_actions(req_id: str, username: str | None):
    kb = InlineKeyboardBuilder()
    kb.button(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data=f"admin:approve:{req_id}")
    kb.button(text="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"admin:decline:{req_id}")
    if username:
        kb.button(text="‚úçÔ∏è –°–≤—è–∑–∞—Ç—å—Å—è", url=f"https://t.me/{username}")
    kb.adjust(2, 1)
    return kb
